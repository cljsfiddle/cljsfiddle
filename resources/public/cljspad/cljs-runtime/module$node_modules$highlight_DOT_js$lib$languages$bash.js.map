{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$bash.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,uDAAf,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA6HpHD,MAAA,CAAOC,OAAP,CAnHAC,QAAa,CAACC,IAAD,CAAO,CAClB,IAAMC,IAAM,EAOZC,OAAA,CAAOC,MAAP,CAAcF,GAAd,CAAkB,CAChBG,UAAW,UADK,CAEhBC,SAAU,CACR,CAACC,MAAO,oBAAR,CADQ,CAROC,CACjBD,MAAO,MADUC,CACFC,IAAI,IADFD,CAEjBE,SAAU,CACR,CAAEH,MAAO,IAAT,CAAeG,SAAU,CAACR,GAAD,CAAzB,CADQ,CAFOM,CAQP,CAFM,CAAlB,CAQA,KAAMG,MAAQ,CACZN,UAAW,OADC,CAEZE,MAAO,MAFK,CAEGE,IAAK,IAFR,CAGZC,SAAU,CAACT,IAAD,CAAMW,gBAAN,CAHE,CAAd,CAKMC,aAAe,CACnBR,UAAW,QADQ,CAEnBE,MAAO,GAFY,CAEPE,IAAK,GAFE,CAGnBC,SAAU,CACRT,IADQ,CACHW,gBADG,CAERV,GAFQ,CAGRS,KAHQ,CAHS,CASrBA,MAAA,CAAMD,QAAN,CAAeI,IAAf,CAAoBD,YAApB,CAUME;KAAAA,CAAa,CACjBR,MAAO,QADU,CAEjBE,IAAK,MAFY,CAGjBC,SAAU,CACR,CAAEH,MAAO,eAAT,CAA0BF,UAAW,QAArC,CADQ,CAERJ,IAFQ,CAEHe,WAFG,CAGRd,GAHQ,CAHO,CAoBnB,KAAMe,cAAgBhB,IAAA,CAAKiB,OAAL,CAAa,CACjCC,OAAQ,2CADyB,CAEjCC,UAAW,EAFsB,CAAb,CAAtB,CAIMC,SAAW,CACfhB,UAAW,UADI,CAEfE,MAAO,2BAFQ,CAGfe,YAAa,CAAA,CAHE,CAIfZ,SAAU,CAACT,IAAA,CAAKsB,OAAL,CAAatB,IAAb,CAAkBuB,UAAlB,CAA8B,CAACjB,MAAO,YAAR,CAA9B,CAAD,CAJK,CAKfa,UAAW,CALI,CAQjB,OAAO,CACLK,KAAM,MADD,CAELC,QAAS,CAAC,IAAD,CAAO,KAAP,CAFJ,CAGLC,SAAU,CACRC,SAAU,kBADF,CAERC,QACE,8DAHM;AAIRC,QACE,YALM,CAMRC,SAGE,2uBATM;AAuBRC,EACE,mCAxBM,CAHL,CA6BLtB,SAAU,CACRO,aADQ,CAERhB,IAAA,CAAKiB,OAAL,EAFQ,CAGRG,QAHQ,CAIRN,KAJQ,CAKRd,IALQ,CAKHgC,iBALG,CAMRpB,YANQ,CAtEUqB,CACpB7B,UAAW,EADS6B,CAEpB3B,MAAO,KAFa2B,CAsEV,CAjEQC,CAClB9B,UAAW,QADO8B,CAElB5B,MAAO,GAFW4B,CAEN1B,IAAK,GAFC0B,CAiER,CASRjC,GATQ,CA7BL,CAxEW,CAVgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/bash.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$bash\"] = function(global,require,module,exports) {\n/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/, end:/\\}/,\n    contains: [\n      { begin: /:-/, contains: [VAR] } // default values\n    ]\n  };\n  Object.assign(VAR,{\n    className: 'variable',\n    variants: [\n      {begin: /\\$[\\w\\d#@][\\w\\d_]*/},\n      BRACED_VAR\n    ]\n  });\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/, end: /\\)/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      SUBST\n    ]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    className: '',\n    begin: /\\\\\"/\n\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$\\(\\(/,\n    end: /\\)\\)/,\n    contains: [\n      { begin: /\\d+#[0-9a-f]+/, className: \"number\" },\n      hljs.NUMBER_MODE,\n      VAR\n    ]\n  };\n  const SH_LIKE_SHELLS = [\n    \"fish\",\n    \"bash\",\n    \"zsh\",\n    \"sh\",\n    \"csh\",\n    \"ksh\",\n    \"tcsh\",\n    \"dash\",\n    \"scsh\",\n  ];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n    relevance: 0\n  };\n\n  return {\n    name: 'Bash',\n    aliases: ['sh', 'zsh'],\n    keywords: {\n      $pattern: /\\b-?[a-z\\._-]+\\b/,\n      keyword:\n        'if then else elif fi for while in do done case esac function',\n      literal:\n        'true false',\n      built_in:\n        // Shell built-ins\n        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n        'trap umask unset ' +\n        // Bash built-ins\n        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n        'read readarray source type typeset ulimit unalias ' +\n        // Shell modifiers\n        'set shopt ' +\n        // Zsh built-ins\n        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n        'zpty zregexparse zsocket zstyle ztcp',\n      _:\n        '-ne -eq -lt -gt -f -d -e -s -l -a' // relevance booster\n    },\n    contains: [\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n      FUNCTION,\n      ARITHMETIC,\n      hljs.HASH_COMMENT_MODE,\n      QUOTE_STRING,\n      ESCAPED_QUOTE,\n      APOS_STRING,\n      VAR\n    ]\n  };\n}\n\nmodule.exports = bash;\n\n};"],
"names":["shadow$provide","global","require","module","exports","bash","hljs","VAR","Object","assign","className","variants","begin","BRACED_VAR","end","contains","SUBST","BACKSLASH_ESCAPE","QUOTE_STRING","push","ARITHMETIC","NUMBER_MODE","KNOWN_SHEBANG","SHEBANG","binary","relevance","FUNCTION","returnBegin","inherit","TITLE_MODE","name","aliases","keywords","$pattern","keyword","literal","built_in","_","HASH_COMMENT_MODE","ESCAPED_QUOTE","APOS_STRING"]
}

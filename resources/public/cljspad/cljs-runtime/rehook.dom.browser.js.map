{"version":3,"sources":["rehook/dom/browser.cljs"],"mappings":";;AAOA,AAAA,AAAMA,AACHC,AAAKC,AAAEC,AAAIC;AADd,AAEE,AACE,AAAAC,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAAAA,AAAWH,AAAAA;;AADb,AAEGI,AAAeL;;AAFlB,AAIE,AAAAM,AAAUL;AACV,AAAAM,AAAwB,AAACI,AAAuBV;AAAhD,AAAAO,AAAAD,AAAA,AAAA,AAAOE;AAAP,AAAAD,AAAAD,AAAA,AAAA,AAAYG;AAAZ,AAAA,AACGD,AAAK,AAACG,AAAyBZ,AAAKU;;AANzC,AAQE,AAACG,AAAuBZ;AACxB,AAAMa,AAAiB,AAAAC,AAAG,AAAA,AAAA,AAACE,AAAMf,AAAsBF,AAA2BG;AAA3Da,AAA8Db;AAA9D,AAAA,AAAAY,AAAAC,AAAAD,AAAAC,AAACf,AAAAA,AAAAA;;AAAxB,AACE,AAAU,AAAA,AAAMa;AAAhB;AAAA,AACE,AAAA,AAAMA,AAA+B,AAACI,AAAkBjB;;;AAF5D,AAGGa,AAAiBd;;AAZtB,AAAA,AAcSC,AAAED;;;;;;AAEb,AAAA,AAAA,AAAAmB,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAAC,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAJ,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAI;;;;;AAAA,AAAA,AAAA,AAAMJ,AACFnB,AAAImC,AAAMC,AAAQrC;AADtB,AAEG,AAAMC,AAAI,AAACmC,AAAAA,AAAAA,AAAMnC,AAAAA,AAAID,AAAAA;AAArBsC,AACkB,AAAA,AAACxC,AAAeE,AAAEC,AAAI,AAACsC,AAAQnB,AAAUnB,AAAImC,AAAMC;AADrE,AAAA9B,AAAA+B,AAAA,AAAA,AACO9B;AADP,AAAAD,AAAA+B,AAAA,AAAA,AACYvC;AADZ,AAEE,AAAMyC,AAAM,AAAAC,AAAS,AAAI,AAAA,AAACC,AAAU3C,AACb,AAAA,AAAC4C,AAAO5C,AACRA;AAFX,AAAA,AAAA0C,AAAAA,AAACJ,AAAAA,AAAAA;;AAAb,AAGE,AAAM7B;AAAN,AACE,AAAI,AAACoC,AAAqBpC;AACxB,AAAMqC,AAAO,AAAAC,AAAM,AAACC,AAAU,AAAA,AAAMvC;AAAvB,AAAA,AAAAsC,AACGE,AAAWR;;AADdM;;AAAb,AAEE,AAACG,AAAmBzC,AAAKqC;;AAC3B,AAACK,AAAoB1C,AAAKgC;;;AAL9B;;;;AAPP,AAAA,AAAA,AAAMpB,AAcFnB,AAAImC,AAAMC,AAAQrC,AAAED;AAdxB,AAeG,AAAME,AAAI,AAACmC,AAAAA,AAAAA,AAAMnC,AAAAA,AAAID,AAAAA;AAArB,AACE,AAAAmD,AAAkB,AAACrD,AAAYC,AAAKC,AAAEC,AAAI,AAACsC,AAAQnB,AAAUnB,AAAImC,AAAMC;AAAvE,AAAA9B,AAAA4C,AAAA,AAAA,AAAO3C;AAAP,AAAAD,AAAA4C,AAAA,AAAA,AAAYpD;AAAZ,AACE,AAAMyC,AAAM,AAAAY,AAAS,AAAI,AAAA,AAACV,AAAU3C,AACb,AAAA,AAAC4C,AAAO5C,AACRA;AAFX,AAAA,AAAAqD,AAAAA,AAACf,AAAAA,AAAAA;;AAAb,AAGE,AAAM7B;AAAN,AACE,AAAI,AAACoC,AAAqBpC;AACxB,AAAMqC,AAAO,AAAAQ,AAAM,AAACN,AAAU,AAAA,AAAMvC;AAAvB,AAAA,AAAA6C,AACGL,AAAWR;;AADda;;AAAb,AAEE,AAACJ,AAAmBzC,AAAKqC;;AAC3B,AAACK,AAAoB1C,AAAKgC;;;AAL9B;;;;AApBT,AAAA,AAAA,AAAMpB,AA2BFnB,AAAImC,AAAMC,AAAQrC,AAAED,AAAKuD;AA3B7B,AA4BG,AAAMrD,AAAI,AAACmC,AAAAA,AAAAA,AAAMnC,AAAAA,AAAID,AAAAA;AAArBuD,AACkB,AAACzD,AAAYC,AAAKC,AAAEC,AAAI,AAACsC,AAAQnB,AAAUnB,AAAImC,AAAMC;AADvE,AAAA9B,AAAAgD,AAAA,AAAA,AACO/C;AADP,AAAAD,AAAAgD,AAAA,AAAA,AACYxD;AADZ,AAEE,AAAMS;AAAN,AACE,AAAI,AAACgD,AAAKF;AACR,AAACG,AAAMP,AACA1C,AACA,AAAAkD,AAAS,AAAI,AAAA,AAAChB,AAAU3C,AACb,AAAA,AAAC4C,AAAO5C,AACRA;AAFX,AAAA,AAAA2D,AAAAA,AAACrB,AAAAA,AAAAA;AAGDiB;;AAEP,AAACJ,AACA1C,AACA,AAAAmD,AAAS,AAAI,AAAA,AAACjB,AAAU3C,AACb,AAAA,AAAC4C,AAAO5C,AACRA;AAFX,AAAA,AAAA4D,AAAAA,AAACtB,AAAAA,AAAAA;AAGDiB;;;AAdL;;;;AA9BL,AAAA,AAAA,AAAA,AAAMlC,AA8CFnB,AAAImC,AAAMC,AAAQrC,AAAED,AAAKuD,AAAQM;AA9CrC,AA+CG,AAAM3D,AAAI,AAACmC,AAAAA,AAAAA,AAAMnC,AAAAA,AAAID,AAAAA;AAArB6D,AACkB,AAAC/D,AAAYC,AAAKC,AAAEC,AAAI,AAACsC,AAAQnB,AAAUnB,AAAImC,AAAMC;AADvE,AAAA9B,AAAAsD,AAAA,AAAA,AACOrD;AADP,AAAAD,AAAAsD,AAAA,AAAA,AACY9D;AADZ,AAEE,AAAMS;AAAN,AACE,AAACiD,AAAMP,AACA1C,AACA,AAAAsD,AAAS,AAAI,AAAA,AAACpB,AAAU3C,AACb,AAAA,AAAC4C,AAAO5C,AACRA;AAFX,AAAA,AAAA+D,AAAAA,AAACzB,AAAAA,AAAAA;AAGD,AAAC0B,AAAKT,AAAMM;;AANrB;;;;AAjDL;AAAA,AAAA,AAAA,AAAAlC,AAAMN;AAAN,AAAA,AAAAO,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAI,AAAA,AAAAF,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAK,AAAA,AAAAH,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAM,AAAA,AAAAJ,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAO,AAAA,AAAAL,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAQ,AAAA,AAAAN,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAS,AAAA;AAAA,AAAA,AAAAA,AAAAR,AAAAG,AAAAC,AAAAC,AAAAC,AAAAC,AAAAR;;;AAAA,AAAA,AAAA,AAAMN;;AAAN","names":["rehook.dom.browser/handle-type","args","e","ctx","$","fexpr__20872","js/module$node_modules$react$index.Fragment","cljs.core/Keyword","vec__20873","cljs.core.nth","elem","extra-args","rehook.dom.util/keyword->elem","rehook.dom.util/merge-arguments","rehook.util/rehook-component?","rehook-component","G__20876","G__20877","cljs.core.assoc","rehook.util/display-name","var_args","G__20895","rehook.dom.browser/bootstrap","args-arr__4757__auto__","len__4736__auto__","i__4737__auto__","argseq__4758__auto__","cljs.core/IndexedSeq","seq20888","G__20889","cljs.core/first","cljs.core/next","G__20890","G__20891","G__20892","G__20893","G__20894","self__4723__auto__","ctx-f","props-f","vec__20901","cljs.core.partial","props","G__20905","cljs.core/contains?","cljs.core.dissoc","js/module$node_modules$react$index.isValidElement","props'","G__20906","goog.object/clone","goog.object/extend","js/module$node_modules$react$index.cloneElement","js/module$node_modules$react$index.createElement","vec__20907","G__20910","G__20920","child","vec__20921","cljs.core/seq?","cljs.core.apply","G__20925","G__20927","children","vec__20931","G__20934","cljs.core/cons"],"sourcesContent":["(ns rehook.dom.browser\n  (:require\n   [\"react\" :as react]\n   [rehook.dom.util :as dom.util]\n   [rehook.util :as util]\n   [goog.object :as obj]))\n\n(defn handle-type\n  [args e ctx $]\n  (cond\n    (#{:> :<>} e)\n    [react/Fragment args]\n\n    (keyword? e)\n    (let [[elem extra-args] (dom.util/keyword->elem e)]\n      [elem (dom.util/merge-arguments args extra-args)])\n\n    (util/rehook-component? e)\n    (let [rehook-component (e (assoc ctx :rehook.dom/props args :rehook.dom/bootstrap $) $)]\n      (when-not (aget rehook-component \"displayName\")\n        (aset rehook-component \"displayName\" (util/display-name e)))\n      [rehook-component args])\n\n    :else [e args]))\n\n(defn bootstrap\n  ([ctx ctx-f props-f e]\n   (let [ctx (ctx-f ctx e)\n         [elem args] (handle-type {} e ctx (partial bootstrap ctx ctx-f props-f))]\n     (let [props (props-f (if (contains? args :rehook/id)\n                            (dissoc args :rehook/id)\n                            args))]\n       (when elem\n         (if (react/isValidElement elem)\n           (let [props' (doto (obj/clone (aget elem \"props\"))\n                          (obj/extend props))]\n             (react/cloneElement elem props'))\n           (react/createElement elem props))))))\n\n  ([ctx ctx-f props-f e args]\n   (let [ctx (ctx-f ctx e)]\n     (let [[elem args] (handle-type args e ctx (partial bootstrap ctx ctx-f props-f))]\n       (let [props (props-f (if (contains? args :rehook/id)\n                              (dissoc args :rehook/id)\n                              args))]\n         (when elem\n           (if (react/isValidElement elem)\n             (let [props' (doto (obj/clone (aget elem \"props\"))\n                            (obj/extend props))]\n               (react/cloneElement elem props'))\n             (react/createElement elem props)))))))\n\n  ([ctx ctx-f props-f e args child]\n   (let [ctx (ctx-f ctx e)\n         [elem args] (handle-type args e ctx (partial bootstrap ctx ctx-f props-f))]\n     (when elem\n       (if (seq? child)\n         (apply react/createElement\n                elem\n                (props-f (if (contains? args :rehook/id)\n                           (dissoc args :rehook/id)\n                           args))\n                child)\n\n         (react/createElement\n          elem\n          (props-f (if (contains? args :rehook/id)\n                     (dissoc args :rehook/id)\n                     args))\n          child)))))\n\n  ([ctx ctx-f props-f e args child & children]\n   (let [ctx (ctx-f ctx e)\n         [elem args] (handle-type args e ctx (partial bootstrap ctx ctx-f props-f))]\n     (when elem\n       (apply react/createElement\n              elem\n              (props-f (if (contains? args :rehook/id)\n                         (dissoc args :rehook/id)\n                         args))\n              (cons child children))))))"]}
{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$zephir.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,yDAAf,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuHtHD,MAAA,CAAOC,OAAP,CA/GAC,QAAe,CAACC,IAAD,CAAO,CACpB,IAAIC,OAAS,CACXC,UAAW,QADA,CAEXC,SAAU,CAACH,IAAD,CAAMI,gBAAN,CAFC,CAGXC,SAAU,CACRL,IAAA,CAAKM,OAAL,CAAaN,IAAb,CAAkBO,gBAAlB,CAAoC,CAACC,QAAS,IAAV,CAApC,CADQ,CAERR,IAAA,CAAKM,OAAL,CAAaN,IAAb,CAAkBS,iBAAlB,CAAqC,CAACD,QAAS,IAAV,CAArC,CAFQ,CAHC,CAAb,CAQIE,WAAaV,IAAbU,CAAkBC,qBARtB,CASIC,OAAS,CAACP,SAAU,CAACL,IAAD,CAAMa,kBAAN,CAA0Bb,IAA1B,CAA+Bc,aAA/B,CAAX,CA4Bb,OAAO,CACLC,KAAM,QADD,CAELC,QAAS,CAAC,KAAD,CAFJ,CAGLC,SA5BAC,qfAyBK;AAILf,SAAU,CACRH,IADQ,CACHmB,mBADG,CAERnB,IAAA,CAAKoB,OAAL,CACE,MADF,CAEE,MAFF,CAGE,CACEjB,SAAU,CACR,CACED,UAAW,QADb,CAEEmB,MAAO,YAFT,CADQ,CADZ,CAHF,CAFQ,CAcR,CACEnB,UAAW,QADb,CAEEmB,MAAO,+BAFT,CAEiCC,IAAK,QAFtC,CAGEnB,SAAU,CAACH,IAAD,CAAMI,gBAAN,CAHZ,CAdQ,CAmBR,CAEEiB,MAAO,kDAFT,CAnBQ,CAuBR,CACEnB,UAAW,UADb,CAEEqB,cAAe,aAFjB,CAEgCD,IAAK,MAFrC,CAE6CE,WAAY,CAAA,CAFzD,CAGEhB,QAAS,WAHX,CAIEL,SAAU,CACRO,UADQ,CAER,CACER,UAAW,QADb,CAEEmB,MAAO,KAFT,CAEgBC,IAAK,KAFrB,CAGEL,SA7DRC,qfA0DM;AAIEf,SAAU,CACR,MADQ,CAERH,IAFQ,CAEHyB,oBAFG,CAGRxB,MAHQ,CAIRW,MAJQ,CAJZ,CAFQ,CAJZ,CAvBQ,CA0CR,CACEV,UAAW,OADb,CAEEqB,cAAe,iBAFjB,CAEoCD,IAAK,GAFzC,CAE8CE,WAAY,CAAA,CAF1D,CAGEhB,QAAS,UAHX,CAIEL,SAAU,CACR,CAACoB,cAAe,oBAAhB,CADQ,CAERb,UAFQ,CAJZ,CA1CQ,CAmDR,CACEa,cAAe,WADjB,CAC8BD,IAAK,GADnC,CAEEd,QAAS,OAFX,CAGEL,SAAU,CAACO,UAAD,CAHZ,CAnDQ,CAwDR,CACEa,cAAe,KADjB,CACwBD,IAAK,GAD7B,CAEEnB,SAAU,CAACO,UAAD,CAFZ,CAxDQ,CA4DR,CACEW,MAAO,UADT,CA5DQ,CA+DRpB,MA/DQ,CAgERW,MAhEQ,CAJL,CAtCa,CARgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/zephir.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$zephir\"] = function(global,require,module,exports) {\n/*\n Language: Zephir\n Description: Zephir, an open source, high-level language designed to ease the creation and maintainability of extensions for PHP with a focus on type and memory safety.\n Author: Oleg Efimov <efimovov@gmail.com>\n Website: https://zephir-lang.com/en\n */\n\nfunction zephir(hljs) {\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n    ]\n  };\n  var TITLE_MODE = hljs.UNDERSCORE_TITLE_MODE;\n  var NUMBER = {variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]};\n  var KEYWORDS =\n    // classes and objects\n    'namespace class interface use extends ' +\n    'function return ' +\n    'abstract final public protected private static deprecated ' +\n    // error handling\n    'throw try catch Exception ' +\n    // keyword-ish things their website does NOT seem to highlight (in their own snippets)\n    // 'typeof fetch in ' +\n    // operators/helpers\n    'echo empty isset instanceof unset ' +\n    // assignment/variables\n    'let var new const self ' +\n    // control\n    'require ' +\n    'if else elseif switch case default ' +\n    'do while loop for continue break ' +\n    'likely unlikely ' +\n    // magic constants\n    // https://github.com/phalcon/zephir/blob/master/Library/Expression/Constants.php\n    '__LINE__ __FILE__ __DIR__ __FUNCTION__ __CLASS__ __TRAIT__ __METHOD__ __NAMESPACE__ ' +\n    // types - https://docs.zephir-lang.com/0.12/en/types\n    'array boolean float double integer object resource string ' +\n    'char long unsigned bool int uint ulong uchar ' +\n    // built-ins\n    'true false null undefined';\n\n  return {\n    name: 'Zephir',\n    aliases: ['zep'],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT(\n        '/\\\\*',\n        '\\\\*/',\n        {\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      {\n        className: 'string',\n        begin: '<<<[\\'\"]?\\\\w+[\\'\"]?$', end: '^\\\\w+;',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        // swallow composed identifiers to avoid parsing them as keywords\n        begin: /(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function fn', end: /[;{]/, excludeEnd: true,\n        illegal: '\\\\$|\\\\[|%',\n        contains: [\n          TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            keywords: KEYWORDS,\n            contains: [\n              'self',\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRING,\n              NUMBER\n            ]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        illegal: /[:\\(\\$\"]/,\n        contains: [\n          {beginKeywords: 'extends implements'},\n          TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace', end: ';',\n        illegal: /[\\.']/,\n        contains: [TITLE_MODE]\n      },\n      {\n        beginKeywords: 'use', end: ';',\n        contains: [TITLE_MODE]\n      },\n      {\n        begin: '=>' // No markup, just a relevance booster\n      },\n      STRING,\n      NUMBER\n    ]\n  };\n}\n\nmodule.exports = zephir;\n\n};"],
"names":["shadow$provide","global","require","module","exports","zephir","hljs","STRING","className","contains","BACKSLASH_ESCAPE","variants","inherit","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","NUMBER","BINARY_NUMBER_MODE","C_NUMBER_MODE","name","aliases","keywords","KEYWORDS","C_LINE_COMMENT_MODE","COMMENT","begin","end","beginKeywords","excludeEnd","C_BLOCK_COMMENT_MODE"]
}

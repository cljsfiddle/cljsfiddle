{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$livescript.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/livescript.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$livescript\"] = function(global,require,module,exports) {\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\nconst TYPES = [\n  \"Intl\",\n  \"DataView\",\n  \"Number\",\n  \"Math\",\n  \"Date\",\n  \"String\",\n  \"RegExp\",\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Error\",\n  \"Symbol\",\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  \"Proxy\",\n  \"Reflect\",\n  \"JSON\",\n  \"Promise\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Float32Array\",\n  \"Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"ArrayBuffer\"\n];\n\nconst ERROR_TYPES = [\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  BUILT_IN_VARIABLES,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: LiveScript\nAuthor: Taneli Vatanen <taneli.vatanen@gmail.com>\nContributors: Jen Evers-Corvina <jen@sevvie.net>\nOrigin: coffeescript.js\nDescription: LiveScript is a programming language that transcompiles to JavaScript. For info about language see http://livescript.net/\nWebsite: https://livescript.net\nCategory: scripting\n*/\n\nfunction livescript(hljs) {\n  var LIVESCRIPT_BUILT_INS = [\n    'npm',\n    'print'\n  ];\n  var LIVESCRIPT_LITERALS = [\n    'yes',\n    'no',\n    'on',\n    'off',\n    'it',\n    'that',\n    'void'\n  ];\n  var LIVESCRIPT_KEYWORDS = [\n    'then',\n    'unless',\n    'until',\n    'loop',\n    'of',\n    'by',\n    'when',\n    'and',\n    'or',\n    'is',\n    'isnt',\n    'not',\n    'it',\n    'that',\n    'otherwise',\n    'from',\n    'to',\n    'til',\n    'fallthrough',\n    'case',\n    'enum',\n    'native',\n    'list',\n    'map',\n    '__hasProp',\n    '__extends',\n    '__slice',\n    '__bind',\n    '__indexOf'\n  ];\n  var KEYWORDS$1 = {\n    keyword: KEYWORDS.concat(LIVESCRIPT_KEYWORDS).join(\" \"),\n    literal: LITERALS.concat(LIVESCRIPT_LITERALS).join(\" \"),\n    built_in: BUILT_INS.concat(LIVESCRIPT_BUILT_INS).join(\" \")\n  };\n  var JS_IDENT_RE = '[A-Za-z$_](?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS$1\n  };\n  var SUBST_SIMPLE = {\n    className: 'subst',\n    begin: /#[A-Za-z$_]/, end: /(?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n    keywords: KEYWORDS$1\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    {\n      className: 'number',\n      begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n      relevance: 0,\n      starts: {end: '(\\\\s*/)?', relevance: 0} // a number tries to eat the following slash to prevent treating it as a regexp\n    },\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\\\\/, end: /(\\s|$)/,\n          excludeEnd: true\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '//', end: '//[gim]*',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE\n    },\n    {\n      begin: '``', end: '``',\n      excludeBegin: true, excludeEnd: true,\n      subLanguage: 'javascript'\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [\n      {\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS$1,\n        contains: ['self'].concat(EXPRESSIONS)\n      }\n    ]\n  };\n\n  var SYMBOLS = {\n    begin: '(#=>|=>|\\\\|>>|-?->|\\\\!->)'\n  };\n\n  return {\n    name: 'LiveScript',\n    aliases: ['ls'],\n    keywords: KEYWORDS$1,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'),\n      hljs.HASH_COMMENT_MODE,\n      SYMBOLS, // relevance booster\n      {\n        className: 'function',\n        contains: [TITLE, PARAMS],\n        returnBegin: true,\n        variants: [\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B\\\\->\\\\*?', end: '\\\\->\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\))?\\\\s*\\\\B[-~]{1,2}>\\\\*?', end: '[-~]{1,2}>\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B!?[-~]{1,2}>\\\\*?', end: '!?[-~]{1,2}>\\\\*?'\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n}\n\nmodule.exports = livescript;\n\n};"],
"names":["shadow$provide","global","require","module","exports","KEYWORDS","LITERALS","BUILT_INS","concat","BUILT_IN_GLOBALS","BUILT_IN_VARIABLES","TYPES","ERROR_TYPES","livescript","hljs","KEYWORDS$1","keyword","LIVESCRIPT_KEYWORDS","join","literal","LIVESCRIPT_LITERALS","built_in","LIVESCRIPT_BUILT_INS","TITLE","inherit","TITLE_MODE","begin","JS_IDENT_RE","SUBST","className","end","keywords","SUBST_SIMPLE","EXPRESSIONS","BINARY_NUMBER_MODE","relevance","starts","variants","contains","BACKSLASH_ESCAPE","excludeEnd","HASH_COMMENT_MODE","excludeBegin","subLanguage","PARAMS","returnBegin","name","aliases","illegal","COMMENT","SYMBOLS","beginKeywords","endsWithParent","returnEnd"]
}

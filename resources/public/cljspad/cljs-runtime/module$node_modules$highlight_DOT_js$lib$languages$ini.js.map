{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$ini.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/ini.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$ini\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: TOML, also INI\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\nCategory: common, config\nWebsite: https://github.com/toml-lang/toml\n*/\n\nfunction ini(hljs) {\n  var NUMBERS = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      { begin: /([\\+\\-]+)?[\\d]+_[\\d_]+/ },\n      { begin: hljs.NUMBER_RE }\n    ]\n  };\n  var COMMENTS = hljs.COMMENT();\n  COMMENTS.variants = [\n    {begin: /;/, end: /$/},\n    {begin: /#/, end: /$/},\n  ];\n  var VARIABLES = {\n    className: 'variable',\n    variants: [\n      { begin: /\\$[\\w\\d\"][\\w\\d_]*/ },\n      { begin: /\\$\\{(.*?)}/ }\n    ]\n  };\n  var LITERALS = {\n    className: 'literal',\n    begin: /\\bon|off|true|false|yes|no\\b/\n  };\n  var STRINGS = {\n    className: \"string\",\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      { begin: \"'''\", end: \"'''\", relevance: 10 },\n      { begin: '\"\"\"', end: '\"\"\"', relevance: 10 },\n      { begin: '\"', end: '\"' },\n      { begin: \"'\", end: \"'\" }\n    ]\n  };\n  var ARRAY = {\n    begin: /\\[/, end: /\\]/,\n    contains: [\n      COMMENTS,\n      LITERALS,\n      VARIABLES,\n      STRINGS,\n      NUMBERS,\n      'self'\n    ],\n    relevance:0\n  };\n\n  var BARE_KEY = /[A-Za-z0-9_-]+/;\n  var QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\n  var QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\n  var ANY_KEY = either(\n    BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE\n  );\n  var DOTTED_KEY = concat(\n    ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*',\n    lookahead(/\\s*=\\s*[^#\\s]/)\n  );\n\n  return {\n    name: 'TOML, also INI',\n    aliases: ['toml'],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      COMMENTS,\n      {\n        className: 'section',\n        begin: /\\[+/, end: /\\]+/\n      },\n      {\n        begin: DOTTED_KEY,\n        className: 'attr',\n        starts: {\n          end: /$/,\n          contains: [\n            COMMENTS,\n            ARRAY,\n            LITERALS,\n            VARIABLES,\n            STRINGS,\n            NUMBERS\n          ]\n        }\n      }\n    ]\n  };\n}\n\nmodule.exports = ini;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","joined","join","either","ini","hljs","NUMBERS","className","relevance","variants","begin","NUMBER_RE","COMMENTS","COMMENT","end","VARIABLES","LITERALS","STRINGS","contains","BACKSLASH_ESCAPE","ARRAY","ANY_KEY","BARE_KEY","QUOTED_KEY_DOUBLE_QUOTE","QUOTED_KEY_SINGLE_QUOTE","DOTTED_KEY","re","name","aliases","case_insensitive","illegal","starts"]
}

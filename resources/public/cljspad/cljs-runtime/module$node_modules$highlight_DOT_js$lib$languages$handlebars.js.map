{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$handlebars.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/handlebars.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$handlebars\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Handlebars\nRequires: xml.js\nAuthor: Robin Ward <robin.ward@gmail.com>\nDescription: Matcher for Handlebars as well as EmberJS additions.\nWebsite: https://handlebarsjs.com\nCategory: template\n*/\n\nfunction handlebars(hljs) {\n  const BUILT_INS = {\n    'builtin-name': [\n      'action',\n      'bindattr',\n      'collection',\n      'component',\n      'concat',\n      'debugger',\n      'each',\n      'each-in',\n      'get',\n      'hash',\n      'if',\n      'in',\n      'input',\n      'link-to',\n      'loc',\n      'log',\n      'lookup',\n      'mut',\n      'outlet',\n      'partial',\n      'query-params',\n      'render',\n      'template',\n      'textarea',\n      'unbound',\n      'unless',\n      'view',\n      'with',\n      'yield'\n    ].join(\" \")\n  };\n\n  const LITERALS = {\n    literal: [\n      'true',\n      'false',\n      'undefined',\n      'null'\n    ].join(\" \")\n  };\n\n  // as defined in https://handlebarsjs.com/guide/expressions.html#literal-segments\n  // this regex matches literal segments like ' abc ' or [ abc ] as well as helpers and paths\n  // like a/b, ./abc/cde, and abc.bcd\n\n  const DOUBLE_QUOTED_ID_REGEX=/\".*?\"/;\n  const SINGLE_QUOTED_ID_REGEX=/'.*?'/;\n  const BRACKET_QUOTED_ID_REGEX=/\\[.*?\\]/;\n  const PLAIN_ID_REGEX=/[^\\s!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]+/;\n  const PATH_DELIMITER_REGEX=/\\.|\\//;\n\n  const IDENTIFIER_REGEX = concat(\n    '(',\n    SINGLE_QUOTED_ID_REGEX, '|',\n    DOUBLE_QUOTED_ID_REGEX, '|',\n    BRACKET_QUOTED_ID_REGEX, '|',\n    PLAIN_ID_REGEX, '|',\n    PATH_DELIMITER_REGEX,\n    ')+'\n  );\n\n  // identifier followed by a equal-sign (without the equal sign)\n  const HASH_PARAM_REGEX = concat(\n    '(',\n    BRACKET_QUOTED_ID_REGEX, '|',\n    PLAIN_ID_REGEX,\n    ')(?==)'\n  );\n\n  const HELPER_NAME_OR_PATH_EXPRESSION = {\n    begin: IDENTIFIER_REGEX,\n    lexemes: /[\\w.\\/]+/\n  };\n\n  const HELPER_PARAMETER = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    keywords: LITERALS\n  });\n\n  const SUB_EXPRESSION = {\n    begin: /\\(/,\n    end: /\\)/\n    // the \"contains\" is added below when all necessary sub-modes are defined\n  };\n\n  const HASH = {\n    // fka \"attribute-assignment\", parameters of the form 'key=value'\n    className: 'attr',\n    begin: HASH_PARAM_REGEX,\n    relevance: 0,\n    starts: {\n      begin: /=/,\n      end: /=/,\n      starts: {\n        contains: [\n          hljs.NUMBER_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          HELPER_PARAMETER,\n          SUB_EXPRESSION\n        ]\n      }\n    }\n  };\n\n  const BLOCK_PARAMS = {\n    // parameters of the form '{{#with x as | y |}}...{{/with}}'\n    begin: /as\\s+\\|/,\n    keywords: { keyword: 'as' },\n    end: /\\|/,\n    contains: [\n      {\n        // define sub-mode in order to prevent highlighting of block-parameter named \"as\"\n        begin: /\\w+/\n      }\n    ]\n  };\n\n  const HELPER_PARAMETERS = {\n    contains: [\n      hljs.NUMBER_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      BLOCK_PARAMS,\n      HASH,\n      HELPER_PARAMETER,\n      SUB_EXPRESSION\n    ],\n    returnEnd: true\n    // the property \"end\" is defined through inheritance when the mode is used. If depends\n    // on the surrounding mode, but \"endsWithParent\" does not work here (i.e. it includes the\n    // end-token of the surrounding mode)\n  };\n\n  const SUB_EXPRESSION_CONTENTS = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    className: 'name',\n    keywords: BUILT_INS,\n    starts: hljs.inherit(HELPER_PARAMETERS, {\n      end: /\\)/,\n    })\n  });\n\n  SUB_EXPRESSION.contains = [\n    SUB_EXPRESSION_CONTENTS\n  ];\n\n  const OPENING_BLOCK_MUSTACHE_CONTENTS = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    keywords: BUILT_INS,\n    className: 'name',\n    starts: hljs.inherit(HELPER_PARAMETERS, {\n      end: /}}/,\n    })\n  });\n\n  const CLOSING_BLOCK_MUSTACHE_CONTENTS = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    keywords: BUILT_INS,\n    className: 'name'\n  });\n\n  const BASIC_MUSTACHE_CONTENTS = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    className: 'name',\n    keywords: BUILT_INS,\n    starts: hljs.inherit(HELPER_PARAMETERS, {\n      end: /}}/,\n    })\n  });\n\n  const ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH = {begin: /\\\\\\{\\{/, skip: true};\n  const PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH = {begin: /\\\\\\\\(?=\\{\\{)/, skip: true};\n\n  return {\n    name: 'Handlebars',\n    aliases: ['hbs', 'html.hbs', 'html.handlebars', 'htmlbars'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH,\n      PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH,\n      hljs.COMMENT(/\\{\\{!--/, /--\\}\\}/),\n      hljs.COMMENT(/\\{\\{!/, /\\}\\}/),\n      {\n        // open raw block \"{{{{raw}}}} content not evaluated {{{{/raw}}}}\"\n        className: 'template-tag',\n        begin: /\\{\\{\\{\\{(?!\\/)/,\n        end: /\\}\\}\\}\\}/,\n        contains: [OPENING_BLOCK_MUSTACHE_CONTENTS],\n        starts: {end: /\\{\\{\\{\\{\\//, returnEnd: true, subLanguage: 'xml'}\n      },\n      {\n        // close raw block\n        className: 'template-tag',\n        begin: /\\{\\{\\{\\{\\//,\n        end: /\\}\\}\\}\\}/,\n        contains: [CLOSING_BLOCK_MUSTACHE_CONTENTS]\n      },\n      {\n        // open block statement\n        className: 'template-tag',\n        begin: /\\{\\{#/,\n        end: /\\}\\}/,\n        contains: [OPENING_BLOCK_MUSTACHE_CONTENTS],\n      },\n      {\n        className: 'template-tag',\n        begin: /\\{\\{(?=else\\}\\})/,\n        end: /\\}\\}/,\n        keywords: 'else'\n      },\n      {\n        // closing block statement\n        className: 'template-tag',\n        begin: /\\{\\{\\//,\n        end: /\\}\\}/,\n        contains: [CLOSING_BLOCK_MUSTACHE_CONTENTS],\n      },\n      {\n        // template variable or helper-call that is NOT html-escaped\n        className: 'template-variable',\n        begin: /\\{\\{\\{/,\n        end: /\\}\\}\\}/,\n        contains: [BASIC_MUSTACHE_CONTENTS]\n      },\n      {\n        // template variable or helper-call that is html-escaped\n        className: 'template-variable',\n        begin: /\\{\\{/,\n        end: /\\}\\}/,\n        contains: [BASIC_MUSTACHE_CONTENTS]\n      }\n    ]\n  };\n}\n\nmodule.exports = handlebars;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","joined","join","handlebars","hljs","BUILT_INS","BRACKET_QUOTED_ID_REGEX","PLAIN_ID_REGEX","IDENTIFIER_REGEX","SINGLE_QUOTED_ID_REGEX","DOUBLE_QUOTED_ID_REGEX","PATH_DELIMITER_REGEX","HASH_PARAM_REGEX","HELPER_NAME_OR_PATH_EXPRESSION","begin","lexemes","HELPER_PARAMETER","inherit","keywords","LITERALS","literal","SUB_EXPRESSION","end","HELPER_PARAMETERS","contains","NUMBER_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","BLOCK_PARAMS","keyword","HASH","className","relevance","starts","returnEnd","SUB_EXPRESSION_CONTENTS","OPENING_BLOCK_MUSTACHE_CONTENTS","CLOSING_BLOCK_MUSTACHE_CONTENTS","BASIC_MUSTACHE_CONTENTS","name","aliases","case_insensitive","subLanguage","ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH","skip","PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH","COMMENT"]
}

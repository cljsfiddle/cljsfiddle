{"version":3,"sources":["cljspad/embed.cljs"],"mappings":"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","names":["cljspad.embed/tabs","db","_","vec__45623","cljs.core.nth","selected-tab","set-selected-tab","rehook.core/use-atom-path","cljs.core._EQ_","cljspad.embed/editor","vec__45631","cljspad.editor/editor","cljspad.embed/repl","vec__45638","cljspad.repl/repl","ctx__45100__auto__","$__45101__auto__","map__45621","cljs.core.dissoc","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","$45619","props__45102__auto__","cljs.core.vary_meta","rehook.dom/rehook-meta","rehook.dom/eval-hiccup","map__45629","$45627","map__45636","$45634"],"sourcesContent":["(ns cljspad.embed\n  (:require [rehook.core :as rehook]\n            [rehook.dom :refer-macros [defui]]\n            [cljspad.editor :as editor]\n            [cljspad.repl :as repl]))\n\n(defui tabs [{:keys [db]} _]\n  (let [[selected-tab set-selected-tab] (rehook/use-atom-path db [:selected-tab])]\n    [:div.toolbar\n     [:div.button\n      {:className (when (= selected-tab :editor) \"active\")\n       :onClick   #(set-selected-tab :editor)}\n      \"Editor\"]\n     [:div.button\n      {:className (when (= selected-tab :repl) \"active\")\n       :onClick   #(set-selected-tab :repl)}\n      \"REPL\"]\n     [:div.button\n      {:className (when (= selected-tab :sandbox) \"active\")\n       :onClick   #(set-selected-tab :sandbox)} \"Output\"]\n     [:a.button {:style {:marginLeft \"auto\"}\n                 :href  \"https://github.com/cljspad/cljspad\"}\n      [:span.cljspad-github-icon]]]))\n\n(defui editor [{:keys [db]} _]\n  (let [[selected-tab _] (rehook/use-atom-path db [:selected-tab])]\n    [:div {:style (when-not (= selected-tab :editor)\n                    {:display \"none\"})}\n     [editor/editor {:height \"calc(100vH - 100px)\"}]]))\n\n(defui repl [{:keys [db]} _]\n  (let [[selected-tab _] (rehook/use-atom-path db [:selected-tab])]\n    (when (= selected-tab :repl)\n      [repl/repl {:height \"calc(100vH - 50px)\"}])))"]}